from flask import Flask, request, redirect, make_response, render_template_string, render_template
import requests

app = Flask(__name__, template_folder="templates")
OAUTH_URL = 'http://127.0.0.1:5002'

items_database = {
    'userA': [{'id': '1', 'name': 'FLAG{flag}', 'price': 10}, 
              {'id': '2', 'name': 'Item 2', 'price': 20}],
    'notuserA': [{'id': '1', 'name': 'Item 1', 'price': 10}, 
                 {'id': '2', 'name': 'Item 2', 'price': 20}]
}

@app.route('/')
def home():
    token = request.cookies.get('token')
    if not token:
        return render_template('indexC.html')
    else:
        response = requests.get(f"{OAUTH_URL}/verifyToken?token={token}")
        data = response.json()
        if data.get('status') == 'success':
            username = data['data']['username']
            items = items_database['userA'] if username == 'userA' else items_database['notuserA']
            return render_template('loggedin.html', username=username, items=items)
        else:
            return redirect('/logout')

@app.route('/login')
def login():
    redirect_url = 'http://127.0.0.1:5003/callback'
    return redirect(f"http://127.0.0.1:5001/login?redirectTo={redirect_url}")

@app.route('/callback')
def callback():
    token = request.args.get('token')
    if token:
        response = make_response(redirect('/'))
        response.set_cookie('token', token, httponly=True)
        return response
    return 'Error: No token received', 400

@app.route('/logout')
def logout():
    response = make_response(redirect('/'))
    response.delete_cookie('token')
    return response

dummy_db = {}

@app.route('/add_to_cart', methods=['POST'])
def add_to_cart():
    item_id = request.form.get('item_id')
    
    if item_id:
        if 'cart' not in dummy_db:
            dummy_db['cart'] = []
        dummy_db['cart'].append(item_id)
        return redirect('/')
    else:
        return 'Error: No item ID provided', 400

@app.route('/view_cart')
def view_cart():
    if 'cart' in dummy_db:
        items_in_cart = [get_item_details(item_id) for item_id in dummy_db['cart']]
        total_price = sum(item['price'] for item in items_in_cart)
        return render_template('view_cart.html', items=items_in_cart, total_price=total_price)
    else:
        return 'Your shopping cart is empty.'

def get_item_details(item_id):
    for user_items in items_database.values():
        for item in user_items:
            if item['id'] == item_id:
                return item
    return None

if __name__ == '__main__':
    app.run(port=5003)
