from flask import Flask, request, jsonify, redirect
import jwt
import datetime
import string
import random

app = Flask(__name__)

characterset = string.ascii_letters + string.digits + string.punctuation
SECRET_KEY = ''.join(random.choice(characterset) for i in range(20))

def generate_jwt(server_a, redirect_url):
    payload = {
        'iss': server_a,
        'exp': datetime.datetime.now(datetime.timezone.utc) + datetime.timedelta(minutes=5),
        'redirect_url': redirect_url
    }
    token = jwt.encode(payload, SECRET_KEY, algorithm='HS256')
    return token

@app.route('/authenticate')
def authenticate():
    server_a = request.args.get('comingFrom')
    redirect_url = request.args.get('redirectTo')
    token = generate_jwt(server_a, redirect_url)
    return redirect(f"{redirect_url}?token={token}")

@app.route('/verifyToken')
def verify_token():
    token = request.args.get('token')
    try:
        decoded = jwt.decode(token, SECRET_KEY, algorithms=['HS256'])
        return jsonify({'status': 'success', 'data': decoded})
    except jwt.ExpiredSignatureError:
        return jsonify({'status': 'error', 'message': 'Token expired'}), 401
    except jwt.InvalidTokenError:
        return jsonify({'status': 'error', 'message': 'Invalid token'}), 401

if __name__ == '__main__':
    app.run(port=5001)