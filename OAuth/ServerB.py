from flask import Flask, request, redirect, render_template
import sqlite3
import hashlib

app = Flask(__name__)
SERVERA_URL = 'http://127.0.0.1:5000/callback'
OAUTH_URL = 'http://127.0.0.1:5002'

def init_db():
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()

    cursor.execute("DROP TABLE IF EXISTS users") 

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY,
            username TEXT NOT NULL,
            password TEXT NOT NULL
        )
    ''')
    conn.commit()
    cursor.execute("INSERT INTO users (username, password) VALUES (?, ?)", ("userA", hashlib.sha256("password".encode()).hexdigest()))
    conn.commit()
    conn.close()

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        conn = sqlite3.connect('users.db')
        cursor = conn.cursor()
        cursor.execute("INSERT INTO users (username, password) VALUES (?, ?)", (username, hashlib.sha256(password.encode()).hexdigest()))
        conn.commit()
        conn.close()
        redirect_url = request.args.get('redirectTo')
        return redirect(f'/login?redirectTo={redirect_url}')
    return render_template('register.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        conn = sqlite3.connect('users.db')
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM users WHERE username=? AND password=?", (username, hashlib.sha256(password.encode()).hexdigest()))
        user = cursor.fetchone()
        conn.close()
        if user:
            redirect_url = request.args.get('redirectTo')
            print (request.args)
            print (redirect_url)
            return redirect(f"{OAUTH_URL}/authenticate?username={username}&redirectTo={redirect_url}")
        return render_template('login.html', login_message='Invalid username or password.')
    return render_template('login.html')

if __name__ == '__main__':
    init_db()
    app.run(port=5001)